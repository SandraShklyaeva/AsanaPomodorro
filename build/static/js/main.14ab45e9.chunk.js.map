{"version":3,"sources":["components/ProjectItem.js","components/Project.js","services/constants.js","services/actions.js","components/ProjectPanel.js","components/Settings.js","components/Stats.js","components/Navigation.js","components/Circle.js","App.js","serviceWorker.js","services/reducers/projects.js","services/reducers/user.js","services/reducers/settings.js","services/reducers/root.js","services/store.js","index.js"],"names":["ProjectItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","handleDelete","selectItem","id","itemId","name","deleteItem","react_default","a","createElement","className","title","onClick","React","Component","Project","handleSelectItem","handleDeleteItem","item","project","todo","fetchTasks","todos","map","i","ProjectItem_ProjectItem","key","gid","ADD_ARTICLE","AUTH_USER","client","asana","Client","create","useAccessToken","FETCH_TASKS_BEGIN","FETCH_TASKS_SUCCESS","FETCH_TASKS_FAILURE","FETCH_PROJECTS_BEGIN","FETCH_PROJECTS_SUCCESS","FETCH_PROJECTS_FAILURE","fetchProjectsBegin","type","fetchProjectsSuccess","projects","payload","fetchProjectsFailure","error","fetchTasksBegin","fetchTasksSuccess","data","fetchTasksFailure","authUserSuccess","user","ConnectedProjectPanel","handleHelloClick","handleFetchTasks","fetchProjects","projectsUpdated","state","slice","filter","index","setState","addArticle","console","log","articles","el","loading","Project_Project","ProjectPanel","connect","root","dispatch","article","getState","findAll","workspace","workspaces","then","response","catch","e","tasks","completed_since","opt_fields","ConnectedSettings","settings","durations","workSession","shortBreakSession","longBreakSession","goal","theme","Settings","Stats","Navigation","makeStyles","width","closeDrawer","value","event","defineProperty","handleChange","BottomNavigation","onChange","BottomNavigationAction","label","icon","BarChart_default","List_default","Settings_default","Drawer","anchor","open","onClose","components_Stats","components_ProjectPanel","components_Settings","ProgressRing","_this$props","radius","stroke","normalizedRadius","circumference","Math","PI","countdownRef","createRef","countdownNumberRef","current","style","height","lineHeight","_this$props2","progress","strokeDashoffset","time","minutes","floor","seconds","toString","length","paused","ButtonBase","handleStart","PlayArrow_default","handlePause","Pause_default","ref","Typography","variant","fill","strokeWidth","strokeDasharray","r","cx","cy","fill-opacity","ConnectedApp","currentItem","isOpen","count","authUser","_this2","timer","setInterval","clearInterval","Paper","components_Circle","components_Navigation","App","users","me","Boolean","window","location","hostname","match","initialState","rootReducer","arguments","undefined","action","objectSpread","tasksUpdated","reducer","goalUntilLongBreak","timerType","sound","autoBreakSessions","autoWorkSessions","settingsReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14ab45e9.chunk.js","sourcesContent":["import React from 'react';\nimport './ProjectItem.css';\n\nexport default class ProjectItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleClick() {\n    this.props.selectItem({\n        id: this.props.itemId,\n        name: this.props.name\n    });\n  }\n\n  handleDelete() {\n    this.props.deleteItem(this.props.itemId);\n  }\n\n  render() {\n    return (\n      <li>\n        <span className=\"todo\" title=\"Click me to select\" onClick={this.handleClick}>{this.props.name}</span>\n        <button onClick={this.handleDelete}>Delete</button>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport ProjectItem from './ProjectItem';\n\n\nexport default class Project extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectItem = this.handleSelectItem.bind(this);\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleSelectItem(item) {\n    this.props.selectItem({\n      project: this.props.project.id,\n      todo: item\n    });\n  }\n\n  handleDeleteItem(item) {\n    this.props.deleteItem({\n      project: this.props.project.id,\n      todo: item\n    });\n  }\n\n  handleClick() {\n      this.props.fetchTasks(this.props.project);\n  }\n\n  render() {\n    return (\n      <div>\n        <h4 onClick={this.handleClick}>{this.props.project.name}</h4>\n        <ul>\n          {this.props.project.todos.map(function(item, i) {\n            return (\n              <ProjectItem\n                key={i}\n                itemId={item.gid}\n                name={item.name}\n                selectItem={this.handleSelectItem}\n                deleteItem={this.handleDeleteItem}\n              />\n            );\n          }, this)}\n        </ul>\n      </div>\n    );\n  }\n}\n","export const ADD_ARTICLE = \"ADD_ARTICLE\";\nexport const FETCH_TASKS = \"FETCH_TASKS\";\nexport const AUTH_USER = \"AUTH_USER\";","import { ADD_ARTICLE, FETCH_TASKS, AUTH_USER } from './constants';\nimport asana from 'asana';\n// replace with your personal access token.\nvar personalAccessToken = '0/bd9753eded967d6eb74493eca899b2e7';\n\n// Construct an Asana client\nvar client = asana.Client.create().useAccessToken(personalAccessToken);\n\nexport function addArticle(payload) {\n  return { type: ADD_ARTICLE, payload };\n}\n\nexport const FETCH_TASKS_BEGIN = 'FETCH_TASKS_BEGIN';\nexport const FETCH_TASKS_SUCCESS = 'FETCH_TASKS_SUCCESS';\nexport const FETCH_TASKS_FAILURE = 'FETCH_TASKS_FAILURE';\n\nexport const FETCH_PROJECTS_BEGIN = 'FETCH_PROJECTS_BEGIN';\nexport const FETCH_PROJECTS_SUCCESS = 'FETCH_PROJECTS_SUCCESS';\nexport const FETCH_PROJECTS_FAILURE = 'FETCH_PROJECTS_FAILURE';\n\n\nexport const fetchProjectsBegin = () => ({\n  type: FETCH_PROJECTS_BEGIN\n});\n\nexport const fetchProjectsSuccess = projects => ({\n  type: FETCH_PROJECTS_SUCCESS,\n  payload: { projects }\n});\n\nexport const fetchProjectsFailure = error => ({\n  type: FETCH_PROJECTS_FAILURE,\n  payload: { error }\n});\n\nexport const fetchTasksBegin = () => ({\n  type: FETCH_TASKS_BEGIN\n});\n\nexport const fetchTasksSuccess = data => ({\n  type: FETCH_TASKS_SUCCESS,\n  payload: { data }\n});\n\nexport const fetchTasksFailure = error => ({\n  type: FETCH_TASKS_FAILURE,\n  payload: { error }\n});\n\nexport const authUserSuccess = user => ({\n   type: AUTH_USER,\n   payload: {user}\n});\n\nexport function authUser() {\n  return dispatch => {\n    return client.users\n          .me()\n          .then(user => {\n            console.log(user);\n            dispatch(authUserSuccess(user))\n          })\n  }\n}\n\nexport function fetchProjects() {\n  return (dispatch, getState) => {\n    dispatch(fetchProjectsBegin());\n    const user = getState().user.user;\n    console.log('KEK', user);\n\n    return client.projects.findAll({\n        workspace: user.workspaces[2].gid\n      })\n      .then(response => {\n        console.log(response);\n        dispatch(fetchProjectsSuccess(response.data));\n        return response.data;\n      })\n      .catch(e => {\n        dispatch(fetchProjectsFailure(e));\n      });\n  };\n}\n\nexport function fetchTasks(project) {\n  console.log('I AM PROJECT1',project);\n  return (dispatch, getState) => {\n    const user = getState().user.user;\n    dispatch(fetchTasksBegin());\n    return client.tasks.findAll({\n      project: project.id,\n      completed_since: 'now',\n      opt_fields: 'id,name'\n    })\n      .then(response => {\n        console.log(response);\n        // There may be more pages of data, we could stream or return a promise\n        // to request those here - for now, let's just return the first page\n        // of items.\n        dispatch(fetchTasksSuccess({\n          project: project,\n          tasks: response.data\n        }));\n        return response.data;\n      })\n      .catch(e => {\n        dispatch(fetchTasksFailure(e));\n      });\n  };\n}\n\n// Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n","import React from 'react';\nimport Project from './Project';\nimport { connect } from 'react-redux';\nimport { addArticle, fetchProjects, fetchTasks } from '../services/actions';\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.root.articles,\n    projects: state.projects.projects,\n    loading: state.projects.loading,\n    error: state.projects.error\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: article => dispatch(addArticle(article)),\n    fetchProjects: () => dispatch(fetchProjects()),\n    fetchTasks: (project) => dispatch(fetchTasks(project))\n  };\n}\n\nclass ConnectedProjectPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectItem = this.handleSelectItem.bind(this);\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n    this.handleHelloClick = this.handleHelloClick.bind(this);\n    this.handleFetchTasks = this.handleFetchTasks.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchProjects();\n    //this.props.fetchProducts();\n    /*client.users\n      .me()\n      .then(user => {\n        console.log(user);\n        const userId = user.id;\n        // The user's \"default\" workspace is the first one in the list, though\n        // any user can have multiple workspaces so you can't always assume this\n        // is the one you want to work with.\n        const workspaceId = user.workspaces[2].gid;\n        console.log(workspaceId);\n        return client.tasks.findAll({\n          assignee: userId,\n          workspace: workspaceId,\n          opt_fields: 'id,name'\n        });\n      })\n      .then(response => {\n        console.log(response);\n        // There may be more pages of data, we could stream or return a promise\n        // to request those here - for now, let's just return the first page\n        // of items.\n        return response.data;\n      })\n      .then(list => {\n        let projectsUpdated = this.state.projects\n          .slice(0)\n          .map(function(project) {\n            project.todos = list;\n            return project;\n          });\n        this.setState({\n          projects: projectsUpdated\n        });\n        console.log(list);\n      })\n      .catch(e => {\n        console.log(e);\n      });*/\n  }\n\n  handleSelectItem(item) {\n    this.props.selectItem(item);\n  }\n\n  handleDeleteItem(item) {\n    let projectsUpdated = this.state.projects.slice(0).map(function(project) {\n      if (project.id === item.project) {\n        project.todos = project.todos.filter(\n          (todo, index) => index !== item.todo\n        );\n      }\n      return project;\n    });\n    this.setState({\n      projects: projectsUpdated\n    });\n  }\n\n  handleHelloClick() {\n    this.props.addArticle({ title: 'TITLE', id: 'ID' });\n  }\n\n  handleFetchTasks(project) {\n    console.log('I AM PROJECT',project);\n    this.props.fetchTasks(project);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div onClick={this.handleHelloClick}>Hello</div>\n          {this.props.articles.map(el => (\n            <div className='list-group-item' key={el.id}>\n              {el.title}\n            </div>\n          ))}\n        </div>\n        {this.props.loading ? (\n          <div>I am Loading</div>\n        ) : (\n          this.props.projects.map(function(item) {\n            return (\n              <Project\n                key={item.id}\n                project={item}\n                selectItem={this.handleSelectItem}\n                deleteItem={this.handleDeleteItem}\n                fetchTasks={this.handleFetchTasks}\n              />\n            );\n          }, this)\n        )}\n      </div>\n    );\n  }\n}\n\nconst ProjectPanel = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedProjectPanel);\nexport default ProjectPanel;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass ConnectedSettings extends React.Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <h3>Durations</h3>\n          <div>\n              Work Session {this.props.settings.durations.workSession}\n          </div>\n          <div>\n              Short Break {this.props.settings.durations.shortBreakSession}\n          </div>\n          <div>\n              Long Break {this.props.settings.durations.longBreakSession}\n          </div>\n          <div>\n              Daily Goal {this.props.settings.durations.goal}\n          </div>\n        </div>\n        <div>\n          <h3>Theme</h3>\n          <div>\n              {this.props.settings.theme}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nconst Settings = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedSettings);\nexport default Settings;\n","import React from 'react';\n\n\nclass Stats extends React.Component {\n\n    render() {\n        return <div>Stats</div>\n    }\n}\n\nexport default Stats;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ListIcon from '@material-ui/icons/List';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ProjectPanel from './ProjectPanel';\nimport Settings from './Settings';\nimport Stats from './Stats';\nimport Drawer from '@material-ui/core/Drawer';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500\n  }\n});\n\nclass Navigation extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.closeDrawer = this.closeDrawer.bind(this);\n  }\n\n  handleChange(event, value) {\n    this.setState({ [value]: true });\n  }\n\n  closeDrawer = value => event => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n    this.setState({ [value]: false });\n  };\n\n  render() {\n    //const classes = useStyles();\n\n    return (\n      <div>\n        <BottomNavigation value={this.state.value} onChange={this.handleChange}>\n          <BottomNavigationAction\n            label='Stats'\n            value='stats'\n            icon={<BarChartIcon />}\n          />\n          <BottomNavigationAction\n            label='Projects'\n            value='projects'\n            icon={<ListIcon />}\n          />\n          <BottomNavigationAction\n            label='Settings'\n            value='settings'\n            icon={<SettingsIcon />}\n          />\n        </BottomNavigation>\n        <Drawer\n          anchor='bottom'\n          open={this.state['stats']}\n          onClose={this.closeDrawer('stats')}\n        >\n          <Stats />\n        </Drawer>\n        <Drawer\n          anchor='bottom'\n          open={this.state['projects']}\n          onClose={this.closeDrawer('projects')}\n        >\n          <ProjectPanel selectItem={this.handleSelectItem} />\n        </Drawer>\n        <Drawer\n          anchor='bottom'\n          open={this.state['settings']}\n          onClose={this.closeDrawer('settings')}\n        >\n          <Settings />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './Circle.css';\nimport Typography from '@material-ui/core/Typography';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nclass ProgressRing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { radius, stroke } = this.props;\n\n    this.normalizedRadius = radius - stroke * 2;\n    this.circumference = this.normalizedRadius * 2 * Math.PI;\n\n    this.countdownRef = React.createRef();\n    this.countdownNumberRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { radius } = this.props;\n    this.countdownRef.current.style.width = radius * 2 + 'px';\n    this.countdownRef.current.style.height = radius * 2 + 'px';\n    this.countdownNumberRef.current.style.lineHeight = radius * 2 + 'px';\n  }\n\n  render() {\n    const { radius, stroke, progress } = this.props;\n    const strokeDashoffset =\n      this.circumference - (progress / this.props.time) * this.circumference;\n\n    const time = this.props.time - this.props.progress;\n    const minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    seconds = seconds.toString().length === 1 ? '0' + seconds : seconds;\n\n    return (\n      <div className='countdownWrapper'>\n        {this.props.paused ? (\n          <ButtonBase onClick={this.props.handleStart}>\n            <PlayArrowIcon />\n          </ButtonBase>\n        ) : (\n          <ButtonBase onClick={this.props.handlePause}>\n            <PauseIcon />\n          </ButtonBase>\n        )}\n        <div className='countdown' ref={this.countdownRef}>\n          <div className='countdownPanel'>\n            <Typography\n              className='countdown-number'\n              ref={this.countdownNumberRef}\n              variant='h3'\n            >\n              {minutes + ':' + seconds}\n            </Typography>\n          </div>\n\n          <svg\n            className='countdownCircle'\n            height={radius * 2}\n            width={radius * 2}\n          >\n            <circle\n              stroke='red'\n              fill='transparent'\n              strokeWidth={stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset: 0 }}\n              r={this.normalizedRadius}\n              cx={radius}\n              cy={radius}\n            />\n            <circle\n              stroke='black'\n              fill='transparent'\n              strokeWidth={stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset }}\n              r={this.normalizedRadius}\n              cx={radius}\n              cy={radius}\n            />\n            {this.props.paused ?\n            <circle\n              stroke='red'\n              fill='grey'\n              fill-opacity='0.7'\n              strokeWidth={stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset: 0 }}\n              r={this.normalizedRadius}\n              cx={radius}\n              cy={radius}\n            /> : ''}\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProgressRing;\n","import React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport Circle from './components/Circle';\nimport Paper from '@material-ui/core/Paper';\n\nimport { connect } from 'react-redux';\nimport { authUser } from './services/actions';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authUser: () => dispatch(authUser())\n  };\n}\n\nclass ConnectedApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentItem: null,\n      isOpen: false,\n      progress: 0,\n      time: 10,\n      paused: false,\n      count: 0\n    };\n\n    this.handleSelectItem = this.handleSelectItem.bind(this);\n    this.handlePause = this.handlePause.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.authUser();\n    this.handleStart();\n  }\n\n  handleSelectItem(item) {\n    this.setState({\n      currentItem: item\n    });\n  }\n\n  handleStart() {\n    this.setState({ paused: false });\n    this.state.timer = setInterval(() => {\n      this.setState({ progress: this.state.progress + 1 });\n      if (this.state.progress === this.state.time) {\n        this.handlePause();\n        this.setState({ \n          count: this.state.count + 1, \n          progress: 0 \n        });\n      }\n    }, 1000);\n  }\n\n  handlePause() {\n    clearInterval(this.state.timer);\n    this.setState({ paused: true });\n  }\n\n  render() {\n    return (\n      <Paper>\n        <Circle\n          radius={120}\n          stroke={4}\n          time={this.state.time}\n          progress={this.state.progress}\n          handleStart={this.handleStart}\n          handlePause={this.handlePause}\n          paused={this.state.paused}\n        />\n        Count: {this.state.count}\n        <Navigation />\n      </Paper>\n    );\n  }\n}\n\nconst App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedApp);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_PROJECTS_BEGIN,\n  FETCH_PROJECTS_SUCCESS,\n  FETCH_PROJECTS_FAILURE,\n  FETCH_TASKS_BEGIN,\n  FETCH_TASKS_SUCCESS,\n  FETCH_TASKS_FAILURE\n} from '../actions.js';\n\nconst initialState = {\n  projects: [],\n  loading: false,\n  error: null\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PROJECTS_BEGIN, FETCH_TASKS_BEGIN:\n      // Mark the state as \"loading\" so we can show a spinner or something\n      // Also, reset any errors. We're starting fresh.\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n\n    case FETCH_TASKS_SUCCESS:\n      // All done: set loading \"false\".\n      // Also, replace the items with the ones from the server\n      console.log('PAYLOAD', action.payload);\n      let tasksUpdated = state.projects.map(function(project) {\n        if (project.id === action.payload.data.project.id) {\n          project.todos = action.payload.data.tasks\n        }\n        return project;\n      });\n      console.log('RESULT', tasksUpdated);\n      return {\n        ...state,\n        loading: false,\n        projects: tasksUpdated\n      };\n\n\n    case FETCH_PROJECTS_SUCCESS:\n      // All done: set loading \"false\".\n      // Also, replace the items with the ones from the server\n\n      let projectsUpdated = action.payload.projects.map(function(project) {\n        project.todos = action.payload.projects;\n        return {\n            id: project.id,\n            todos: [],\n            name: project.name\n        };\n      });\n      return {\n        ...state,\n        loading: false,\n        projects: projectsUpdated\n      };\n\n    case FETCH_PROJECTS_FAILURE, FETCH_TASKS_FAILURE:\n      // The request failed. It's done. So set loading to \"false\".\n      // Save the error, so we can display it somewhere.\n      // Since it failed, we don't have items to display anymore, so set `items` empty.\n      //\n      // This is all up to you and your app though:\n      // maybe you want to keep the items around!\n      // Do whatever seems right for your use case.\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        projects: []\n      };\n\n    default:\n      // ALWAYS have a default case in a reducer\n      return state;\n  }\n}\nexport default rootReducer;\n","import {\n    AUTH_USER\n  } from '../constants.js';\n\nconst initialState = {\n  user: null,\n  //null -> use default workspace\n  //all -> use all workspaces\n  //number -> use particular workspace with given id\n  workspace: null,\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_USER:\n      return {\n        ...state,\n        user: action.payload.user\n      };\n\n    default:\n      return state;\n  }\n}\nexport default reducer;\n","const initialState = {\n  durations: {\n    workSession: 20,\n    shortBreakSession: 5,\n    longBreakSession: 15,\n    goal: 8,\n    goalUntilLongBreak: 4\n  },\n  theme: 'default',\n  timerType: '',\n  sound: '',\n  autoBreakSessions: true,\n  autoWorkSessions: false\n};\n\nfunction settingsReducer(state = initialState, action) {\n  return state;\n}\n\nexport default settingsReducer;\n","import { ADD_ARTICLE, FETCH_TASKS } from '../constants';\nimport projects from \"./projects\";\nimport user from \"./user\";\nimport settings from \"./settings\";\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n  articles: []\n};\n\nfunction root(state = initialState, action) {\n /* if (action.type === ADD_ARTICLE) {\n    return Object.assign({}, state, {\n      articles: state.articles.concat(action.payload)\n    });\n  } else if (action.type === ADD_ARTICLE) {\n    client.users\n      .me()\n      .then(user => {\n        console.log(user);\n        const userId = user.id;\n        // The user's \"default\" workspace is the first one in the list, though\n        // any user can have multiple workspaces so you can't always assume this\n        // is the one you want to work with.\n        const workspaceId = user.workspaces[2].gid;\n        console.log(workspaceId);\n        return client.tasks.findAll({\n          assignee: userId,\n          workspace: workspaceId,\n          opt_fields: 'id,name'\n        });\n      })\n      .then(response => {\n        console.log(response);\n        // There may be more pages of data, we could stream or return a promise\n        // to request those here - for now, let's just return the first page\n        // of items.\n        return response.data;\n      })\n      .then(list => {\n        let projectsUpdated = this.state.projects\n          .slice(0)\n          .map(function(project) {\n            project.todos = list;\n            return project;\n          });\n        this.setState({\n          projects: projectsUpdated\n        });\n        console.log(list);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }*/\n  return state;\n}\n\nexport default combineReducers({\n  user,\n  projects,\n  settings,\n  root\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root';\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './services/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}